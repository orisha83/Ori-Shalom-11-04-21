{"version":3,"sources":["configs/routes.js","configs/apiDefinitions.js","outerApiCalls/weatherServices.js","components/favoritesButtonComp.js","components/FavoritesItemComp.js","components/FavoritesComp.js","components/SearchBarComp.js","components/forcastComp.js","components/HomeComp.js","components/HeaderComp.js","App.js","reducers/forcastReducer.js","reducers/favoritesReducer.js","store/store.js","index.js"],"names":["apikey","process","baseUrl","getFiveDayWeather","cityKey","a","axios","data","DailyForecasts","toast","error","message","getCurrentWeather","getWeatherByCity","key","name","fiveDays","currentWeather","getUserLocationFromBrowser","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","err","getUserGeoLocation","location","coords","latitude","longitude","autocomplete","locationKey","FavoritesButtonComp","props","dispatch","useDispatch","favorites","useSelector","state","favoritesReducer","forcastReducer","useState","city","setCity","isFavorite","some","x","keyProp","favoriteClicked","type","payload","useEffect","Button","color","style","fontSize","onClick","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","FavoritesItemComp","console","log","classes","cityData","setCityData","weatherData","Grid","item","xs","Paper","className","elevation","callbackFunc","container","direction","justify","alignItems","Temperature","Metric","Value","toFixed","width","height","src","WeatherIcon","WeatherText","FavoritesComp","history","useHistory","loadCity","push","routes","map","index","SearchBarComp","cityOptions","setCityOptions","value","setValue","selectedOption","setSelectedOption","suggestions","selectSuggesstion","Key","LocalizedName","onSubmit","e","preventDefault","placeholder","onChange","target","ForcastComp","weekDaysArray","getDayNameFromDate","date","Day","Date","getDay","dayItem","IconPhrase","Maximum","Icon","Minimum","Night","HomeComp","Container","textAlign","title","flexGrow","HeaderComp","AppBar","position","Toolbar","Typography","variant","to","App","userLocationData","getUserWeather","path","component","exact","initState","filter","reducer","combineReducers","myStore","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.759003e3.chunk.js","sourcesContent":["export default { home: \"/\", \r\n                 favorites: \"/favorites\" };","export const apikey = process.env.REACT_APP_API_KEY;\r\nexport const baseUrl = \"https://dataservice.accuweather.com/\";","import axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {apikey, baseUrl} from '../configs/apiDefinitions'\r\n\r\nconst getFiveDayWeather = async (cityKey) => {\r\n    try {\r\n        const data = await axios(`${baseUrl}forecasts/v1/daily/5day/${cityKey}?apikey=${apikey}&metric=${true}`);\r\n        return data.data.DailyForecasts;\r\n      } catch (err) {\r\n        toast.error(\"Couldn't get forcast weather data: \" + err.message);\r\n      }\r\n} \r\n\r\nexport async function getCurrentWeather(cityKey) \r\n{\r\n    try {\r\n        const data = await axios(`${baseUrl}currentconditions/v1/${cityKey}?apikey=${apikey}&details=true`);\r\n        return data.data;\r\n      } catch (err) {\r\n        toast.error(\"Couldn't get current weather data: \" + err.message);\r\n      }\r\n} \r\n\r\nexport async function getWeatherByCity(key, name)\r\n{\r\n    try {\r\n      const fiveDays = await getFiveDayWeather(key);\r\n      const currentWeather = await getCurrentWeather(key);\r\n      const data = { fiveDays, key, name, currentWeather };\r\n  \r\n      return data\r\n    } \r\n    catch (err) \r\n    {\r\n        toast.error(\"Couldn't get weather information: \" + err.message);\r\n    };\r\n};\r\n\r\nconst getUserLocationFromBrowser = () => {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n          (data) => {\r\n            resolve(data)\r\n        }, \r\n            (err) => {\r\n                reject(err)\r\n        });\r\n    })\r\n};\r\n\r\nexport async function getUserGeoLocation() {\r\n    try {\r\n      const location = await getUserLocationFromBrowser();\r\n      if (!location) \r\n        return;\r\n      const data = await axios(`${baseUrl}locations/v1/cities/geoposition/search?apikey=${apikey}&q=${location.coords.latitude},${location.coords.longitude}`);\r\n      \r\n      return data.data;\r\n    } catch (err) {\r\n        toast.error(\"Couldn't get user position: \" + err.message);\r\n    }\r\n  };\r\n\r\n\r\n  export async function autocomplete(locationKey) {\r\n    try {\r\n      const data = await axios(`${baseUrl}locations/v1/cities/autocomplete?apikey=${apikey}&q=${locationKey}`);\r\n      return data.data;\r\n    } \r\n    catch (err) \r\n    {\r\n        toast.error(\"Couldn't get autocomplete data: \" + err.message);\r\n    }\r\n  }","import Button from '@material-ui/core/Button';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst FavoritesButtonComp = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { favorites } = useSelector((state) => state.favoritesReducer);\r\n    const { key, name } = useSelector((state) => state.forcastReducer);\r\n    const [city,setCity] = useState({})\r\n\r\n    const isFavorite = favorites.some(x => x.key == props.keyProp)\r\n\r\n    const favoriteClicked = () =>\r\n    {\r\n        if(isFavorite)\r\n        {\r\n            dispatch({type:\"REMOVE_FROM_FAVORITES\", payload : city})\r\n        }\r\n        else\r\n        {\r\n            dispatch({type:\"ADD_TO_FAVORITES\", payload : city})\r\n        }       \r\n    }\r\n\r\n    useEffect(() =>\r\n    {   \r\n        setCity({key :key, name : name})\r\n    },[key])\r\n\r\n    return (\r\n        <div>\r\n            {isFavorite ? \r\n            <Button color=\"inherit\"><FavoriteIcon style={{ fontSize: 50 }} onClick={favoriteClicked}/></Button>\r\n            :\r\n            <Button color=\"inherit\"><FavoriteBorderIcon style={{ fontSize: 50 }} onClick={favoriteClicked}/></Button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesButtonComp;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {getCurrentWeather} from '../outerApiCalls/weatherServices';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FavoritesButtonComp from './favoritesButtonComp'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap','& > *': {\r\n        margin: theme.spacing(6),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst FavoritesItemComp = (props) => {\r\n    console.log(\"FavoritesItemComp\")\r\n    const classes = useStyles();\r\n    const [cityData, setCityData] = useState()\r\n\r\n    useEffect(() => {\r\n        const weatherData = async () => {\r\n            const data = await getCurrentWeather(props.cityData.key)\r\n            setCityData(data)\r\n        };\r\n        weatherData();\r\n\r\n    },[])\r\n\r\n    return (\r\n            <Grid item xs={3} >\r\n                {cityData &&\r\n                <Paper className={classes.root} elevation={13} onClick={() => props.callbackFunc({key : props.cityData.key, name : props.cityData.name})}>\r\n                    <Grid container  direction=\"column\"  justify=\"center\"  alignItems=\"center\"> \r\n                        <Grid item>\r\n                            <h2>{props.cityData.name}</h2>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <h3>{cityData[0]?.Temperature.Metric.Value.toFixed(0) + \"°C\"}</h3>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <img width=\"40\" height=\"50\" src={`https://www.accuweather.com/images/weathericons//${cityData[0]?.WeatherIcon}.svg`}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <h5>{cityData[0]?.WeatherText}</h5>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FavoritesButtonComp keyProp={props.cityData.key}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>}\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default FavoritesItemComp;","import Grid from '@material-ui/core/Grid';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FavoritesItemComp from './FavoritesItemComp';\r\nimport {useHistory} from 'react-router-dom'\r\nimport routes from '../configs/routes'\r\nimport {getWeatherByCity} from '../outerApiCalls/weatherServices';\r\n\r\n\r\nconst FavoritesComp = () => {\r\n    const { favorites } = useSelector((state) => state.favoritesReducer);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch(); \r\n\r\n    const loadCity = async (cityData) => {\r\n        const weatherData = await getWeatherByCity(cityData.key, cityData.name)\r\n        dispatch({type:'LOAD_WEATHER_DATA',payload:weatherData});\r\n        history.push(routes.home);\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                {favorites && favorites.map((item,index) => {\r\n                    return <FavoritesItemComp key={index} cityData={item} callbackFunc={data => loadCity(data)}/>\r\n                    }\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesComp;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {autocomplete} from '../outerApiCalls/weatherServices'\r\nimport {getWeatherByCity} from '../outerApiCalls/weatherServices';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBarComp() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [cityOptions, setCityOptions] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [ selectedOption, setSelectedOption ] = useState( false );\r\n\r\n  useEffect( async () => {\r\n    if(value != \"\")\r\n    {\r\n        const suggestions = await autocomplete(value);\r\n        setCityOptions(suggestions)\r\n        setSelectedOption(true)\r\n    }\r\n    else{\r\n        setSelectedOption(false)\r\n    }\r\n    \r\n}, [ value ]);\r\n\r\nconst selectSuggesstion = async (data) => {\r\n    const weatherData = await getWeatherByCity(cityOptions[data].Key, cityOptions[data].LocalizedName)\r\n    dispatch({type:'LOAD_WEATHER_DATA',payload:weatherData});\r\n    setSelectedOption( false ); \r\n    setValue(\"\")  \r\n  };\r\n\r\n  return (\r\n        <form onSubmit={ e => e.preventDefault() }>\r\n\r\n        <input value={ value } \r\n            className=\"auto-complete-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search for city...\"\r\n            onChange={ e => setValue( e.target.value ) }/>\r\n\r\n    {selectedOption &&\r\n        <div className=\"auto-complete-suggestions\">\r\n            <ul >\r\n                {\r\n                    cityOptions && cityOptions.map(( item, index ) => {;\r\n                        return (\r\n                            <li key={item.Key} onClick={() => selectSuggesstion( index )}>{ item.LocalizedName }</li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>}\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default SearchBarComp;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap','& > *': {\r\n        margin: theme.spacing(6),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst ForcastComp = () => {\r\n    const classes = useStyles();\r\n    const {fiveDays} = useSelector((state) => state.forcastReducer);\r\n\r\n    const weekDaysArray = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\n    const getDayNameFromDate = (date) => {\r\n        const Day = new Date(date).getDay();\r\n        return weekDaysArray[Day];\r\n      };\r\n\r\n    return (\r\n        <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            {fiveDays.map((dayItem,index) => {\r\n                return  <Grid item xs key={index}>\r\n                            <Paper className={classes.root} elevation={13}>\r\n                            <Grid container  direction=\"column\"  justify=\"center\"  alignItems=\"center\"> \r\n                                <Grid item>\r\n                                    <h4>{getDayNameFromDate(dayItem.Date)}</h4>\r\n                                </Grid>\r\n                                <Grid item> \r\n                                    <h5>{dayItem.Day.IconPhrase}</h5>\r\n                                </Grid>\r\n                                <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                                    <Grid item>\r\n                                        <Grid container  direction=\"column\"  justify=\"center\"  alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {dayItem.Temperature.Maximum.Value.toFixed(0) + \"°C\"}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <img width=\"30\" height=\"40\" src={`https://www.accuweather.com/images/weathericons/${dayItem.Day.Icon}.svg`} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container  direction=\"column\"  justify=\"center\"  alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {dayItem.Temperature.Minimum.Value.toFixed(0) + \"°C\"}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <img width=\"30\" height=\"40\" src={`https://www.accuweather.com/images/weathericons/${dayItem.Night.Icon}.svg`} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n            })}\r\n\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default ForcastComp;","import { useSelector } from 'react-redux';\r\nimport Container from '@material-ui/core/Container';\r\nimport SearchBarComp from './SearchBarComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ForcastComp from './forcastComp'\r\nimport FavoritesButtonComp from './favoritesButtonComp'\r\n\r\nconst HomeComp = () => {\r\n    const {name, currentWeather, key} = useSelector((state) => state.forcastReducer);\r\n\r\n    return (\r\n        <Container textAlign=\"center\"> \r\n            <Grid container direction=\"column\" alignItems=\"center\" spacing={5}>\r\n                <Grid item xs> \r\n                    <SearchBarComp />\r\n                </Grid>\r\n                {currentWeather &&\r\n                    <Grid item container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                        <Grid item>\r\n                                <h2>{name}</h2>\r\n                                <h3>{currentWeather[0]?.Temperature.Metric.Value.toFixed(0) + \"°C\"}</h3>\r\n                                <img width=\"40\" height=\"50\" src={`https://www.accuweather.com/images/weathericons//${currentWeather[0]?.WeatherIcon}.svg`}/>\r\n                                <h3>{currentWeather[0]?.WeatherText}</h3>\r\n                        </Grid>\r\n                        <Grid item>\r\n                             <FavoritesButtonComp keyProp={key}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <ForcastComp />\r\n            </Grid>  \r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default HomeComp;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst HeaderComp = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Weather App\r\n              </Typography>\r\n              <Link to={`/`} style={{ color: \"inherit\" }}><Button color=\"inherit\"><HomeIcon /></Button></Link>\r\n              <Link to={`/favorites`} style={{ color: \"inherit\" }}><Button color=\"inherit\"><FavoriteIcon /></Button></Link>\r\n            </Toolbar>\r\n          </AppBar>\r\n      );\r\n}\r\n\r\n\r\n\r\nexport default HeaderComp;","import React, { useEffect, useState} from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect,} from \"react-router-dom\";\r\nimport routes from './configs/routes'\r\nimport FavoritesComp from './components/FavoritesComp'\r\nimport HomeComp from './components/HomeComp'\r\nimport HeaderComp from './components/HeaderComp'\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getUserGeoLocation, getWeatherByCity} from './outerApiCalls/weatherServices'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();  \r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect - dispatch\")\r\n    const getUserWeather = async () =>  {\r\n      try{\r\n        const userLocationData = await getUserGeoLocation();\r\n        if(userLocationData) \r\n        {\r\n          const weatherData = await getWeatherByCity(userLocationData.Key, userLocationData.LocalizedName)\r\n          dispatch({type:'LOAD_WEATHER_DATA',payload:weatherData});\r\n        }\r\n        else\r\n        {\r\n          const weatherData = await getWeatherByCity(215854, \"Tel Aviv\")\r\n          dispatch({type:'LOAD_WEATHER_DATA',payload:weatherData});\r\n        }\r\n      }\r\n      catch (err) {\r\n        toast.error(\"Can't set initial Location \" + err.message);\r\n      }\r\n    };\r\n    getUserWeather();\r\n  },[dispatch]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <HeaderComp />\r\n      <Switch>\r\n        <Route path={routes.favorites} component={FavoritesComp}></Route>\r\n        <Route exact path={routes.home} component={HomeComp}></Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n      <ToastContainer />\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initState = {\r\n    fiveDays:[], \r\n    key:\"\", \r\n    name:\"\", \r\n    currentWeather:[]\r\n}\r\n\r\nconst forcastReducer = (state = initState, {type, payload}) =>\r\n{\r\n    switch(type)\r\n    {\r\n        case 'LOAD_WEATHER_DATA':\r\n            return {\r\n                fiveDays: payload.fiveDays,\r\n                key: payload.key,\r\n                name: payload.name,\r\n                currentWeather: payload.currentWeather,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default forcastReducer;","\r\n\r\nconst favoritesReducer = (state = { favorites: [] }, {type, payload}) => {\r\n    switch (type) {\r\n      case \"ADD_TO_FAVORITES\":\r\n        return {\r\n          favorites: [...state.favorites, payload],\r\n        };\r\n      case \"REMOVE_FROM_FAVORITES\":\r\n        return {\r\n          favorites: state.favorites.filter((x) => x.key !== payload.key),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default favoritesReducer;","import { createStore, combineReducers } from \"redux\";\r\nimport forcastReducer from '../reducers/forcastReducer'\r\nimport favoritesReducer from '../reducers/favoritesReducer'\r\n\r\nconst reducer = combineReducers({\r\n    forcastReducer: forcastReducer,\r\n    favoritesReducer: favoritesReducer\r\n  });\r\n  \r\nconst myStore = createStore(reducer);\r\n  \r\nexport default myStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport myStore from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={myStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}